name: Deploy to EC2

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: prod-deploy
  cancel-in-progress: false

jobs:
  deploy:
    runs-on: [self-hosted, navira]
    defaults: { run: { shell: bash } }
    steps:
      - uses: actions/checkout@v4

      - name: Ensure base tools
        run: |
          sudo apt-get update -y
          sudo apt-get install -y rsync curl python3 python3-venv python3-pip

      - name: Prepare app dir & perms
        env: { APP: /home/appuser/app }
        run: |
          sudo mkdir -p "$APP"
          sudo chmod 751 /home/appuser              # allow traversal
          sudo chown -R appuser:appuser /home/appuser

      - name: Sync repo to server path (preserve venv & secrets)
        env: { APP: /home/appuser/app }
        run: |
          sudo rsync -a --delete \
            --exclude '.git' --exclude '.venv' --exclude '.streamlit' \
            "$GITHUB_WORKSPACE"/ "$APP"/
          sudo chown -R appuser:appuser "$APP"

      - name: Install deps in venv (as appuser)
        env: { APP: /home/appuser/app }
        run: |
          sudo -u appuser bash -lc '
            set -e
            cd "$APP"
            python3 -m venv .venv || true
            . .venv/bin/activate
            pip install --upgrade pip
            [ -f requirements.txt ] && pip install -r requirements.txt || true
          '

      - name: Restart service
        run: sudo systemctl restart navira

      - name: Health check with logs
        run: |
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:8501/ >/dev/null; then
              echo "App healthy"; exit 0
            fi
            sleep 2
          done
          echo "===== last 200 lines of navira ====="
          sudo journalctl -u navira -n 200 --no-pager
          exit 1
